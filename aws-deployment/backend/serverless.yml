service: Jargon AI-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  environment: ${file(.env.${opt:stage, 'dev'})}
  
  # VPC Configuration
  vpc:
    securityGroupIds:
      - ${ssm:/Jargon AI/${opt:stage, 'dev'}/lambda-security-group-id}
    subnetIds:
      - ${ssm:/Jargon AI/${opt:stage, 'dev'}/private-subnet-1}
      - ${ssm:/Jargon AI/${opt:stage, 'dev'}/private-subnet-2}
  
  # IAM Role
  role: ${ssm:/Jargon AI/${opt:stage, 'dev'}/lambda-execution-role-arn}
  
  # Environment variables
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DATABASE_URL: ${ssm:/Jargon AI/${opt:stage, 'dev'}/database-url}
    DYNAMODB_TRANSACTIONS_TABLE: ${ssm:/Jargon AI/${opt:stage, 'dev'}/dynamodb-transactions-table}
    DYNAMODB_JARS_TABLE: ${ssm:/Jargon AI/${opt:stage, 'dev'}/dynamodb-jars-table}
    S3_BUCKET: ${ssm:/Jargon AI/${opt:stage, 'dev'}/s3-bucket-name}
    BEDROCK_MODEL_ID: anthropic.claude-3-sonnet-20240229-v1:0
    COGNITO_USER_POOL_ID: ${ssm:/Jargon AI/${opt:stage, 'dev'}/cognito-user-pool-id}
    COGNITO_CLIENT_ID: ${ssm:/Jargon AI/${opt:stage, 'dev'}/cognito-client-id}
  
  # Logging
  logRetentionInDays: 14
  
  # Tags
  tags:
    Project: Jargon AI-Prototype
    Environment: ${opt:stage, 'dev'}
    Service: Backend

functions:
  # Chatbot API
  chatbot:
    handler: src/handlers/chatbot.handler
    events:
      - httpApi:
          path: /api/chatbot
          method: POST
          cors: true
    timeout: 30
    memorySize: 512
    environment:
      BEDROCK_MODEL_ID: anthropic.claude-3-sonnet-20240229-v1:0
  
  # Transaction Management
  transactions:
    handler: src/handlers/transactions.handler
    events:
      - httpApi:
          path: /api/transactions
          method: GET
          cors: true
      - httpApi:
          path: /api/transactions
          method: POST
          cors: true
      - httpApi:
          path: /api/transactions/{id}
          method: PUT
          cors: true
      - httpApi:
          path: /api/transactions/{id}
          method: DELETE
          cors: true
    timeout: 15
    memorySize: 256
  
  # Jars Management
  jars:
    handler: src/handlers/jars.handler
    events:
      - httpApi:
          path: /api/jars
          method: GET
          cors: true
      - httpApi:
          path: /api/jars
          method: POST
          cors: true
      - httpApi:
          path: /api/jars/{id}
          method: PUT
          cors: true
      - httpApi:
          path: /api/jars/{id}
          method: DELETE
          cors: true
    timeout: 15
    memorySize: 256
  
  # Analytics
  analytics:
    handler: src/handlers/analytics.handler
    events:
      - httpApi:
          path: /api/analytics
          method: GET
          cors: true
    timeout: 15
    memorySize: 256
  
  # File Upload
  upload:
    handler: src/handlers/upload.handler
    events:
      - httpApi:
          path: /api/upload
          method: POST
          cors: true
    timeout: 30
    memorySize: 512
  
  # ML Predictions
  predictions:
    handler: src/handlers/predictions.handler
    events:
      - httpApi:
          path: /api/predictions
          method: POST
          cors: true
    timeout: 60
    memorySize: 1024
    environment:
      ML_SERVICE_URL: ${ssm:/Jargon AI/${opt:stage, 'dev'}/ml-service-url}
  
  # Webhook for real-time updates
  webhook:
    handler: src/handlers/webhook.handler
    events:
      - httpApi:
          path: /api/webhook
          method: POST
          cors: true
    timeout: 10
    memorySize: 128

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-webpack

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true
    packager: 'npm'
  
  serverless-offline:
    httpPort: 3001
    lambdaPort: 3002
  
  dotenv:
    path: .env.${opt:stage, 'dev'}

package:
  exclude:
    - node_modules/**
    - .git/**
    - .env.*
    - README.md
    - .gitignore
    - package-lock.json
    - yarn.lock
    - tests/**
    - coverage/**
    - .nyc_output/**
    - .serverless/**
    - .webpack/** 